import SmoothieCard from '@/components/SmoothieCard';
import Head from 'next/head'
// import Image from 'next/image'
// import styles from '@/styles/Home.module.css'

import { useEffect, useState } from 'react';
import supabase from '../../libs/SupabaseClient';

// Components

export default function Home() {

  const [fetchError, setFetchError] = useState(null);
  const [smoothies, setSmoothies] = useState([]);
  const [orderBy, setOrderBy] = useState('created_at');


  const handleDelete = (id) => {
    setSmoothies(prevSmoothies => {
      return prevSmoothies.filter(sm => sm.id !== id);
    })
  }


  useEffect(() => {

    const fetchSmoothies = async () => {

      // Fetching Data From the smoothies
      const { data, error } = await supabase
        .from('smoothies')
        .select()
        .order(orderBy, { ascending: false })

      if (error) {
        setFetchError('Could not fetch the smoothies');
        setSmoothies([]);
        console.log(error);
      }

      if (data) {
        setSmoothies(data);
        setFetchError(null);
      }
    }

    fetchSmoothies()
  }, [orderBy])

  return (
    <>
      <Head>
        <title>Parimal</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className='page home'>
          {fetchError && (<p>{fetchError}</p>)}
          {smoothies && (
            <div className='smoothies'>
              <div className='smoothies'>
                <div className='order-by'>
                  <p>Order by:</p>
                  <button onClick={() => setOrderBy('created_at')}>Time Created</button>
                  <button onClick={() => setOrderBy('title')}>Title</button>
                  <button onClick={() => setOrderBy('rating')}>Rating</button>
                  {orderBy}
                </div>
              </div>
              <div className="smoothie-grid">
                {
                  smoothies.map(smoothies => (
                    <SmoothieCard key={smoothies.id} onDelete={handleDelete} smoothies={smoothies} />
                  ))
                }
              </div>
            </div>
          )}
        </div>
      </main>
    </>
  )
}
